<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubeflow</title><link>http://kubeflow.devops.delivery/</link><description>Recent content on Kubeflow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://kubeflow.devops.delivery/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://kubeflow.devops.delivery/components/argo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kubeflow.devops.delivery/components/argo/</guid><description>Argo Workflows Component # Description # Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Argo Workflows is implemented as a Kubernetes CRD.
Define workflows where each step in the workflow is a container. Model multi-step workflows as a sequence of tasks or capture the dependencies between tasks using a graph (DAG). Easily run compute intensive jobs for machine learning or data processing in a fraction of the time using Argo Workflows on Kubernetes.</description></item><item><title/><link>http://kubeflow.devops.delivery/components/istio-ingressgateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kubeflow.devops.delivery/components/istio-ingressgateway/</guid><description>Istio Ingress Gateway # Current component will use a Helm chart to deploy an Istio Ingress Gateway
Parameters # Input parameters:
hub.componentName - Name of the istio ingress gateway component.istio.namespace - Namespace of the istio (defaults to: istio-system) component.istio.ingressGateway.type - reserved for future variability (defaults to: sds ) Output parameters:
component.istio.ingressGateway - Name of istio gateeway Implementation Specifics # Helm chart downloaded from istio repo: https://storage.</description></item><item><title/><link>http://kubeflow.devops.delivery/components/pipelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kubeflow.devops.delivery/components/pipelines/</guid><description>Kubeflow pipelines # Overview of the Kubeflow pipelines service # Kubeflow is a machine learning (ML) toolkit that is dedicated to making deployments of ML workflows on Kubernetes simple, portable, and scalable.
Kubeflow pipelines are reusable end-to-end ML workflows built using the Kubeflow Pipelines SDK.
The Kubeflow pipelines service has the following goals:
End to end orchestration: enabling and simplifying the orchestration of end to end machine learning pipelines Easy experimentation: making it easy for you to try numerous ideas and techniques, and manage your various trials/experiments.</description></item><item><title/><link>http://kubeflow.devops.delivery/stacks/kubeflow-gcp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kubeflow.devops.delivery/stacks/kubeflow-gcp/</guid><description>Kubeflow Stack on GCP # Here we explain how to deploy a Kubeflow into your Google Cloud Platform environment
Deployment Prerequisites # You should be signed in and have an active project in GCP: https://console.cloud.google.com You should have already deployed a GKE cluster. Don&amp;rsquo;t have a cluster? Not a problem. We have a GKE stack for you, follow this link
Deployment # Deployment via Cloud Shell # The easiest way how to get started is via Cloud Shell Edititor.</description></item></channel></rss>